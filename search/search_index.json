{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Variables/memory_allocation/","text":"Memory Allocation","title":"Memory Allocation"},{"location":"Variables/memory_allocation/#memory-allocation","text":"","title":"Memory Allocation"},{"location":"Variables/variable/","text":"Variables Variables are names of memory locations where the required data is stored. Every Variable has two parts a unique identifier ( name of variable ) and value given to that identifier. Note We can use same names for variables in different scopes #inlcude <iostream> int main (){ int i = 0 ; // i is variable. }","title":"Variables"},{"location":"Variables/variable/#variables","text":"Variables are names of memory locations where the required data is stored. Every Variable has two parts a unique identifier ( name of variable ) and value given to that identifier. Note We can use same names for variables in different scopes #inlcude <iostream> int main (){ int i = 0 ; // i is variable. }","title":"Variables"},{"location":"Variables/variable_declaration/","text":"Declaration Varible declaration is like giving a blueprint to the compiler for the required variable Memory is not allocated when a variable is declared #include <iostream> int main (){ int i ; // Variable declaration }","title":"Declaration"},{"location":"Variables/variable_declaration/#declaration","text":"Varible declaration is like giving a blueprint to the compiler for the required variable Memory is not allocated when a variable is declared #include <iostream> int main (){ int i ; // Variable declaration }","title":"Declaration"},{"location":"Variables/variable_definition/","text":"Definition Variable definition is where a value is associated with the declared variable it is when memory is allocated to that variable #include <iostream> int main (){ int i ; //Variable declaration i = 10 ; // Variable definition }","title":"Definition"},{"location":"Variables/variable_definition/#definition","text":"Variable definition is where a value is associated with the declared variable it is when memory is allocated to that variable #include <iostream> int main (){ int i ; //Variable declaration i = 10 ; // Variable definition }","title":"Definition"}]}